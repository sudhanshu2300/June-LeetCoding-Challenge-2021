class Solution {
     public int numMatchingSubseq(String S, String[] words) {
	if (S == null || S.length() == 0 || words == null || words.length == 0)
		return 0;

	// hash code of the string -> match / no match
	Map<Integer, Boolean> cache = new HashMap<>();
	int res =0;
	for (String t: words) {
		boolean match = false;
		final int key = t.hashCode();
		boolean contains = cache.containsKey(key);
		if (contains) {
			match = cache.get(key);
		} else {
			match = isSubsequence(t, S);
			cache.put(key, match);
		}
		res = match? res + 1: res;
	}
	return res;
}


public static final boolean isSubsequence(String s, String t) {
	if (t == null || s.length() > t.length())
		return false;
	int i = 0;
	for (int j = 0; i < s.length() && j < t.length(); j++) {
		if (s.charAt(i) == t.charAt(j))
			i++;
	}
	return i == s.length();
}
}