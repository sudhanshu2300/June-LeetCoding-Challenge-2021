class Solution {
    public List<List<Integer>> palindromePairs(String[] words) {
      List<List<Integer>> ans = new ArrayList<List<Integer>>();
        for(int i =0;i<words.length;i++){
            for(int j =i+1;j<words.length;j++){
                String str = words[i];
                String str2 = words[j];
    if(  str.length()==0 || str2.length()==0 || str2.charAt(0)==str.charAt(str.length()-1) || str2.charAt(str2.length()-1)==str.charAt(0) ){
                    String check1 = ""+words[i]+words[j];
                    String check2 = ""+words[j]+words[i];
                    if(palindrome(check1)==true){
                        ArrayList<Integer> a = new ArrayList();
                        a.add(i);
                        a.add(j);
                        if(!ans.contains(a)){
                            ans.add(a);
                        }
                    }
                    if(palindrome(check2)==true){
                        ArrayList<Integer> a = new ArrayList();
                        a.add(j);
                        a.add(i);
                        if(!ans.contains(a)){
                            ans.add(a);
                        }
                    }
                }
            }
        }
        return ans;
    }
    
    public static boolean palindrome (String a){
        int start =0;
        int end  =a.length()-1;
        while(start<=end){
            if(a.charAt(start)!=a.charAt(end)){
                return false;
            }else{
                start++;
                end--;
            }
        }
        return true ;
    }
}