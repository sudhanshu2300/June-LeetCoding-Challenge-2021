class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        HashMap<Integer,Integer> hm = new HashMap();
        for(int i =0;i<inorder.length;i++){
            hm.put(inorder[i],i);
        }
        TreeNode root = new TreeNode(preorder[0],null,null);
        for(int i =1;i<preorder.length;i++){
            TreeNode node = new TreeNode(preorder[i],null,null);
            build(root,node,hm);
        }
        return root;
    }
    public  static void build(TreeNode root , TreeNode node,  HashMap<Integer,Integer> hm ){
        int pos_root = hm.get(root.val);
        int pos_node = hm.get(node.val);
        if(pos_root>pos_node){
            if(root.left==null){
                root.left=node;
            }else{
                build(root.left,node,hm);
            }
        }else{
            if(root.right==null){
                root.right=node;
            }else{
                build(root.right,node,hm);
            }
        }
    }
}